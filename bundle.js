(()=>{"use strict";var n={620:(n,e,t)=>{t.d(e,{Z:()=>m});var r=t(537),o=t.n(r),a=t(645),s=t.n(a),i=t(667),c=t.n(i),p=new URL(t(75),t.b),l=new URL(t(638),t.b),d=s()(o()),u=c()(p),f=c()(l);d.push([n.id,`@layer base {\n  @font-face {\n    font-family: "Josefin Sans";\n    src: url(${u}) format("ttf"),\n      url(${f}) format("ttf");\n    font-weight: 600;\n    font-style: normal;\n  }\n\n  :root {\n    --primary: brown;\n    --secondary: lightbrown;\n    --tertiary: yellow;\n\n    --sm-gap: 10px;\n    --m-gap: 20px;\n    --l-gap: 30px;\n\n    --sm-br: 5px;\n  }\n\n  *,\n  *::before,\n  *::after {\n    box-sizing: border-box;\n  }\n\n  body {\n    font-family: "Josefin Sans", system-ui, sans-serif;\n    background-color: var(--primary);\n    color: var(--primary-contrast);\n    margin: 0;\n  }\n\n  input,\n  textarea,\n  button,\n  select {\n    font: inherit;\n    font-size: 100%;\n  }\n}\n`,"",{version:3,sources:["webpack://./src/css-components/base.css"],names:[],mappings:"AAAA;EACE;IACE,2BAA2B;IAC3B;2DACsE;IACtE,gBAAgB;IAChB,kBAAkB;EACpB;;EAEA;IACE,gBAAgB;IAChB,uBAAuB;IACvB,kBAAkB;;IAElB,cAAc;IACd,aAAa;IACb,aAAa;;IAEb,YAAY;EACd;;EAEA;;;IAGE,sBAAsB;EACxB;;EAEA;IACE,kDAAkD;IAClD,gCAAgC;IAChC,8BAA8B;IAC9B,SAAS;EACX;;EAEA;;;;IAIE,aAAa;IACb,eAAe;EACjB;AACF",sourcesContent:['@layer base {\n  @font-face {\n    font-family: "Josefin Sans";\n    src: url(../fonts/JosefinSans-VariableFont_wght.ttf) format("ttf"),\n      url(../fonts/JosefinSans-Italic-VariableFont_wght.ttf) format("ttf");\n    font-weight: 600;\n    font-style: normal;\n  }\n\n  :root {\n    --primary: brown;\n    --secondary: lightbrown;\n    --tertiary: yellow;\n\n    --sm-gap: 10px;\n    --m-gap: 20px;\n    --l-gap: 30px;\n\n    --sm-br: 5px;\n  }\n\n  *,\n  *::before,\n  *::after {\n    box-sizing: border-box;\n  }\n\n  body {\n    font-family: "Josefin Sans", system-ui, sans-serif;\n    background-color: var(--primary);\n    color: var(--primary-contrast);\n    margin: 0;\n  }\n\n  input,\n  textarea,\n  button,\n  select {\n    font: inherit;\n    font-size: 100%;\n  }\n}\n'],sourceRoot:""}]);const m=d},155:(n,e,t)=>{t.d(e,{Z:()=>i});var r=t(537),o=t.n(r),a=t(645),s=t.n(a)()(o());s.push([n.id,"@layer component {\n  #nav ul {\n    list-style-type: none;\n    padding: 0;\n    display: flex;\n    justify-content: center;\n  }\n}\n","",{version:3,sources:["webpack://./src/css-components/nav.css"],names:[],mappings:"AAAA;EACE;IACE,qBAAqB;IACrB,UAAU;IACV,aAAa;IACb,uBAAuB;EACzB;AACF",sourcesContent:["@layer component {\n  #nav ul {\n    list-style-type: none;\n    padding: 0;\n    display: flex;\n    justify-content: center;\n  }\n}\n"],sourceRoot:""}]);const i=s},282:(n,e,t)=>{t.d(e,{Z:()=>i});var r=t(537),o=t.n(r),a=t(645),s=t.n(a)()(o());s.push([n.id,"@layer component {\n  .primary-heading {\n    background-color: yellow;\n    width: fit-content;\n    padding: var(--sm-gap) var(--l-gap);\n    clip-path: polygon(\n      10% 0,\n      90% 0,\n      100% 20%,\n      100% 80%,\n      90% 100%,\n      10% 100%,\n      0 80%,\n      0 20%\n    );\n  }\n}\n","",{version:3,sources:["webpack://./src/css-components/primary-heading.css"],names:[],mappings:"AAAA;EACE;IACE,wBAAwB;IACxB,kBAAkB;IAClB,mCAAmC;IACnC;;;;;;;;;KASC;EACH;AACF",sourcesContent:["@layer component {\n  .primary-heading {\n    background-color: yellow;\n    width: fit-content;\n    padding: var(--sm-gap) var(--l-gap);\n    clip-path: polygon(\n      10% 0,\n      90% 0,\n      100% 20%,\n      100% 80%,\n      90% 100%,\n      10% 100%,\n      0 80%,\n      0 20%\n    );\n  }\n}\n"],sourceRoot:""}]);const i=s},353:(n,e,t)=>{t.d(e,{Z:()=>i});var r=t(537),o=t.n(r),a=t(645),s=t.n(a)()(o());s.push([n.id,"@layer component {\n  .treehouse-img {\n    width: 100px;\n  }\n}\n","",{version:3,sources:["webpack://./src/css-components/treehouse.css"],names:[],mappings:"AAAA;EACE;IACE,YAAY;EACd;AACF",sourcesContent:["@layer component {\n  .treehouse-img {\n    width: 100px;\n  }\n}\n"],sourceRoot:""}]);const i=s},426:(n,e,t)=>{t.d(e,{Z:()=>u});var r=t(537),o=t.n(r),a=t(645),s=t.n(a),i=t(620),c=t(353),p=t(155),l=t(282),d=s()(o());d.i(i.Z),d.i(c.Z),d.i(p.Z),d.i(l.Z),d.push([n.id,"@layer component, page, base;\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA,4BAA4B",sourcesContent:["@layer component, page, base;\n\n@import url(./css-components/base.css);\n@import url(./css-components/treehouse.css);\n@import url(./css-components/nav.css);\n@import url(./css-components/primary-heading.css);\n"],sourceRoot:""}]);const u=d},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,o,a){"string"==typeof n&&(n=[[null,n,void 0]]);var s={};if(r)for(var i=0;i<this.length;i++){var c=this[i][0];null!=c&&(s[c]=!0)}for(var p=0;p<n.length;p++){var l=[].concat(n[p]);r&&s[l[0]]||(void 0!==a&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=a),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),o&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=o):l[4]="".concat(o)),e.push(l))}},e}},667:n=>{n.exports=function(n,e){return e||(e={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),e.hash&&(n+=e.hash),/["'() \t\n]|(%20)/.test(n)||e.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),a="/*# ".concat(o," */");return[e].concat([a]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var a={},s=[],i=0;i<n.length;i++){var c=n[i],p=r.base?c[0]+r.base:c[0],l=a[p]||0,d="".concat(p," ").concat(l);a[p]=l+1;var u=t(d),f={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==u)e[u].references++,e[u].updater(f);else{var m=o(f,r);r.byIndex=i,e.splice(i,0,{identifier:d,updater:m,references:1})}s.push(d)}return s}function o(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,o){var a=r(n=n||[],o=o||{});return function(n){n=n||[];for(var s=0;s<a.length;s++){var i=t(a[s]);e[i].references--}for(var c=r(n,o),p=0;p<a.length;p++){var l=t(a[p]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}a=c}}},569:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},638:(n,e,t)=>{n.exports=t.p+"d96bb2f98cb3d0d8ee06.ttf"},75:(n,e,t)=>{n.exports=t.p+"613585db06f849ca7717.ttf"}},e={};function t(r){var o=e[r];if(void 0!==o)return o.exports;var a=e[r]={id:r,exports:{}};return n[r](a,a.exports,t),a.exports}t.m=n,t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var r=e.getElementsByTagName("script");if(r.length)for(var o=r.length-1;o>-1&&!n;)n=r[o--].src}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.b=document.baseURI||self.location.href,t.nc=void 0,(()=>{var n=t(379),e=t.n(n),r=t(795),o=t.n(r),a=t(569),s=t.n(a),i=t(565),c=t.n(i),p=t(216),l=t.n(p),d=t(589),u=t.n(d),f=t(426),m={};m.styleTagTransform=u(),m.setAttributes=c(),m.insert=s().bind(null,"head"),m.domAPI=o(),m.insertStyleElement=l(),e()(f.Z,m),f.Z&&f.Z.locals&&f.Z.locals;const h=t.p+"2837dbb861ebf055c588.png",A=(n="div",e="")=>{const t=document.createElement(n);return e&&t.classList.add(e),t},y=(n,e="p",t="")=>{const r=document.createElement(e);return t&&r.classList.add(t),r.textContent=n,r},g=(n,e="")=>{const t=document.createElement("img");return t.src=n,e&&t.classList.add(e),t},b=(n,e)=>{const t=document.createElement("a");return t.textContent=`${n}: ${e}`,"tel"===n?t.href="tel:"+e:"email"===n&&(t.href="mailto:"+e),t},v=n=>n[0].toUpperCase()+n.substring(1).toLowerCase(),C=function(n){const e=A("address");for(const t in n){const r=v(t);switch(t){case"title":const o=y(n[t],"h2");e.appendChild(o);break;case"city":case"state":case"zip":case"role":const a=y(`${r}: ${n[t]}`,"p");e.appendChild(a);break;case"tel":case"email":const s=b(r,n[t]);e.appendChild(s)}}return e},w=function(n){const e=y("Andy's Acorntastic Appetizers","h1","primary-heading");n.appendChild(e);const t=function(n,e,t=null){const r=document.createElement("article");if(null!==t){const n=g(t,"treehouse-img");r.appendChild(n)}const o=y(e);r.appendChild(o);const a=A("footer"),s=y(n,"cite");return a.appendChild(s),r.appendChild(a),r}("Adam","Andy's with their own homebrewed syrup has the best pancakes around! \n  The atmosphere and customer service make you feel like you are sitting\n  in the middle of the woods, gorging on nuts like a squirrel! \n  This is exactly the kind of place that I like to return to again and again.",h);n.appendChild(t);const r=function(n,e){const t=A(),r=y(n,"h2"),o=A("dl");for(const n in e){const t=y(n,"dt"),r=y(e[n],"dd");o.append(t,r)}return t.append(r,o),t}("Opening Hours",{monday:"8am - 8pm",tuesday:"6am - 6pm",wednesday:"6am - 6pm",thursday:"6am - 10pm",friday:"9am - 11pm",saturday:"10am - 11pm",sunday:"10am - 11pm"});n.appendChild(r);const o=A("footer"),a=C({title:"Location",city:"Anytown",state:"Toronto",zip:12345,tel:98765432,email:"john.doe@example.com"});o.appendChild(a),n.appendChild(o)},E=function(n){const e=y("Menu","h1","primary-heading");n.appendChild(e),function(n){const e=[];for(const t in n){const r=A("section",t),o=y(v(t),"h2");r.appendChild(o),n[t].forEach((n=>{const e=A("article"),t=y(n.title,"h3"),o=y(n.desc),a=y(n.price);e.append(t,o,a),r.appendChild(e)})),e.push(r)}return e}({beverages:[{title:"HoneyAcorn Tea",desc:"A cozy and sweet tea crafted with premium syrup, honey, and a hint of lemon to kickstart your day on a delightful note!",price:"$1.25"},{title:"Berry Tea",desc:"A soothing tea, rich and satisfying, infused with a blend of various berry flavors. Ideal when served chilled, though a warm serving is available upon request.",price:"$2"}],sides:[{title:"Jam & Toast",desc:"A slice of toast with your preferred choice of bread, accompanied by our homemade blackberry or raspberry jam.",price:"$1"},{title:"Fresh Fruit",desc:"A small bowl of fresh fruit, whatever we find at the market for the day.",price:"$3"}],mains:[{title:"Acorn Squash Stuffed with Wild Rice and Nuts",desc:"Roasted acorn squash halves filled with a savory mixture of wild rice, chopped nuts, dried fruits, and herbs.",price:"$5"},{title:"Acorn-Crusted Chicken Tenders",desc:"Chicken tenders coated in a batter made from acorn flour, seasoned with herbs, and baked or fried until crispy.",price:"$10"},{title:"Hazelnut-Crusted Trout",desc:"Trout fillets coated in crushed hazelnuts and herbs, pan-seared to perfection, and served with an acorn-based sauce.",price:"$20"},{title:"Acorn Gnocchi with Brown Butter Sage Sauce",desc:"Homemade acorn flour gnocchi served in a nutty brown butter and sage sauce, sprinkled with grated Parmesan cheese.",price:"$15"},{title:"Walnut-Crusted Salmon",desc:"Combines the richness of salmon with the nutty crunch of walnuts and the tangy-sweet flavors of mustard and honey.",price:"$50"}]}).forEach((e=>{n.appendChild(e)}))},B=document.querySelector("#content"),x=document.querySelector("#nav"),I=document.querySelectorAll("#nav button");x.addEventListener("click",(n=>{if("BUTTON"===n.target.tagName){const e=n.target,t=e.id;I.forEach((n=>{n.classList.remove("active")})),e.classList.add("active"),B.innerHTML="","home"===t&&w(B),"menu"===t&&E(B),"contact"===t&&function(n){const e=y("Contact","h1","primary-heading");n.appendChild(e);const t=A("section");[{title:"Mama Squirrel",role:"Manager",tel:5555555554,email:"totallyRealEmail@notFake.com"},{title:"Papa Squirrel",role:"Chef",tel:5555555555,email:"perfectlyRealEmail@notFake.com"}].forEach((n=>{const e=C(n);t.appendChild(e)})),n.appendChild(t)}(B)}})),w(B)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,