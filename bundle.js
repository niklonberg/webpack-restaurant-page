(()=>{"use strict";var n={321:(n,e,t)=>{t.d(e,{Z:()=>c});var o=t(537),r=t.n(o),a=t(645),s=t.n(a)()(r());s.push([n.id,"@layer component {\n  address {\n    margin-bottom: var(--l-gap);\n  }\n\n  address h2 {\n    margin: 0;\n    padding-left: var(--m-gap);\n  }\n\n  address span {\n    display: block;\n    margin-block: 16px;\n  }\n}\n","",{version:3,sources:["webpack://./src/css-components/address.css"],names:[],mappings:"AAAA;EACE;IACE,2BAA2B;EAC7B;;EAEA;IACE,SAAS;IACT,0BAA0B;EAC5B;;EAEA;IACE,cAAc;IACd,kBAAkB;EACpB;AACF",sourcesContent:["@layer component {\n  address {\n    margin-bottom: var(--l-gap);\n  }\n\n  address h2 {\n    margin: 0;\n    padding-left: var(--m-gap);\n  }\n\n  address span {\n    display: block;\n    margin-block: 16px;\n  }\n}\n"],sourceRoot:""}]);const c=s},620:(n,e,t)=>{t.d(e,{Z:()=>m});var o=t(537),r=t.n(o),a=t(645),s=t.n(a),c=t(667),i=t.n(c),p=new URL(t(75),t.b),l=new URL(t(638),t.b),d=s()(r()),A=i()(p),u=i()(l);d.push([n.id,`@layer base {\n  @font-face {\n    font-family: "Josefin Sans";\n    src: url(${A}) format("ttf"),\n      url(${u}) format("ttf");\n    font-weight: 600;\n    font-style: normal;\n  }\n\n  :root {\n    --primary: brown;\n    --secondary: lightbrown;\n    --tertiary: yellow;\n\n    --sm-gap: 10px;\n    --m-gap: 20px;\n    --l-gap: 30px;\n\n    --sm-br: 5px;\n\n    --clip: polygon(\n      10% 0,\n      90% 0,\n      100% 20%,\n      100% 80%,\n      90% 100%,\n      10% 100%,\n      0 80%,\n      0 20%\n    );\n  }\n\n  *,\n  *::before,\n  *::after {\n    box-sizing: border-box;\n  }\n\n  body {\n    font-family: "Josefin Sans", system-ui, sans-serif;\n    background-color: var(--primary);\n    color: var(--primary-contrast);\n    margin: 0;\n  }\n\n  input,\n  textarea,\n  button,\n  select {\n    font: inherit;\n    font-size: 100%;\n  }\n}\n`,"",{version:3,sources:["webpack://./src/css-components/base.css"],names:[],mappings:"AAAA;EACE;IACE,2BAA2B;IAC3B;2DACsE;IACtE,gBAAgB;IAChB,kBAAkB;EACpB;;EAEA;IACE,gBAAgB;IAChB,uBAAuB;IACvB,kBAAkB;;IAElB,cAAc;IACd,aAAa;IACb,aAAa;;IAEb,YAAY;;IAEZ;;;;;;;;;KASC;EACH;;EAEA;;;IAGE,sBAAsB;EACxB;;EAEA;IACE,kDAAkD;IAClD,gCAAgC;IAChC,8BAA8B;IAC9B,SAAS;EACX;;EAEA;;;;IAIE,aAAa;IACb,eAAe;EACjB;AACF",sourcesContent:['@layer base {\n  @font-face {\n    font-family: "Josefin Sans";\n    src: url(../fonts/JosefinSans-VariableFont_wght.ttf) format("ttf"),\n      url(../fonts/JosefinSans-Italic-VariableFont_wght.ttf) format("ttf");\n    font-weight: 600;\n    font-style: normal;\n  }\n\n  :root {\n    --primary: brown;\n    --secondary: lightbrown;\n    --tertiary: yellow;\n\n    --sm-gap: 10px;\n    --m-gap: 20px;\n    --l-gap: 30px;\n\n    --sm-br: 5px;\n\n    --clip: polygon(\n      10% 0,\n      90% 0,\n      100% 20%,\n      100% 80%,\n      90% 100%,\n      10% 100%,\n      0 80%,\n      0 20%\n    );\n  }\n\n  *,\n  *::before,\n  *::after {\n    box-sizing: border-box;\n  }\n\n  body {\n    font-family: "Josefin Sans", system-ui, sans-serif;\n    background-color: var(--primary);\n    color: var(--primary-contrast);\n    margin: 0;\n  }\n\n  input,\n  textarea,\n  button,\n  select {\n    font: inherit;\n    font-size: 100%;\n  }\n}\n'],sourceRoot:""}]);const m=d},801:(n,e,t)=>{t.d(e,{Z:()=>c});var o=t(537),r=t.n(o),a=t(645),s=t.n(a)()(r());s.push([n.id,"@layer component {\n  .desc {\n    padding: var(--sm-gap) calc(2 * var(--l-gap));\n  }\n\n  .desc dd {\n    margin-bottom: var(--sm-gap);\n    font-weight: bold;\n    letter-spacing: 1.2px;\n  }\n}\n","",{version:3,sources:["webpack://./src/css-components/descList.css"],names:[],mappings:"AAAA;EACE;IACE,6CAA6C;EAC/C;;EAEA;IACE,4BAA4B;IAC5B,iBAAiB;IACjB,qBAAqB;EACvB;AACF",sourcesContent:["@layer component {\n  .desc {\n    padding: var(--sm-gap) calc(2 * var(--l-gap));\n  }\n\n  .desc dd {\n    margin-bottom: var(--sm-gap);\n    font-weight: bold;\n    letter-spacing: 1.2px;\n  }\n}\n"],sourceRoot:""}]);const c=s},193:(n,e,t)=>{t.d(e,{Z:()=>c});var o=t(537),r=t.n(o),a=t(645),s=t.n(a)()(r());s.push([n.id,"@layer component {\n  .footer {\n    padding: var(--l-gap);\n  }\n}\n","",{version:3,sources:["webpack://./src/css-components/footer.css"],names:[],mappings:"AAAA;EACE;IACE,qBAAqB;EACvB;AACF",sourcesContent:["@layer component {\n  .footer {\n    padding: var(--l-gap);\n  }\n}\n"],sourceRoot:""}]);const c=s},458:(n,e,t)=>{t.d(e,{Z:()=>c});var o=t(537),r=t.n(o),a=t(645),s=t.n(a)()(r());s.push([n.id,'@layer component {\n  #content {\n    padding-inline: calc(2 * var(--l-gap));\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: calc(3 * var(--l-gap));\n  }\n\n  #content > * {\n    position: relative;\n  }\n\n  #content > *::before {\n    content: "";\n    background-color: red;\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    clip-path: var(--clip);\n    z-index: -1;\n  }\n\n  #content > *::after {\n    content: "";\n    background-color: yellow;\n    position: absolute;\n    top: -20px;\n    right: -20px;\n    bottom: -20px;\n    left: -20px;\n    clip-path: var(--clip);\n    z-index: -2;\n  }\n\n  #content > *:last-child {\n    margin-bottom: calc(2 * var(--l-gap));\n  }\n}\n',"",{version:3,sources:["webpack://./src/css-components/main.css"],names:[],mappings:"AAAA;EACE;IACE,sCAAsC;IACtC,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,2BAA2B;EAC7B;;EAEA;IACE,kBAAkB;EACpB;;EAEA;IACE,WAAW;IACX,qBAAqB;IACrB,kBAAkB;IAClB,MAAM;IACN,QAAQ;IACR,SAAS;IACT,OAAO;IACP,sBAAsB;IACtB,WAAW;EACb;;EAEA;IACE,WAAW;IACX,wBAAwB;IACxB,kBAAkB;IAClB,UAAU;IACV,YAAY;IACZ,aAAa;IACb,WAAW;IACX,sBAAsB;IACtB,WAAW;EACb;;EAEA;IACE,qCAAqC;EACvC;AACF",sourcesContent:['@layer component {\n  #content {\n    padding-inline: calc(2 * var(--l-gap));\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: calc(3 * var(--l-gap));\n  }\n\n  #content > * {\n    position: relative;\n  }\n\n  #content > *::before {\n    content: "";\n    background-color: red;\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    clip-path: var(--clip);\n    z-index: -1;\n  }\n\n  #content > *::after {\n    content: "";\n    background-color: yellow;\n    position: absolute;\n    top: -20px;\n    right: -20px;\n    bottom: -20px;\n    left: -20px;\n    clip-path: var(--clip);\n    z-index: -2;\n  }\n\n  #content > *:last-child {\n    margin-bottom: calc(2 * var(--l-gap));\n  }\n}\n'],sourceRoot:""}]);const c=s},155:(n,e,t)=>{t.d(e,{Z:()=>c});var o=t(537),r=t.n(o),a=t(645),s=t.n(a)()(r());s.push([n.id,"@layer component {\n  #nav ul {\n    list-style-type: none;\n    padding: 0;\n    display: flex;\n    justify-content: center;\n  }\n}\n","",{version:3,sources:["webpack://./src/css-components/nav.css"],names:[],mappings:"AAAA;EACE;IACE,qBAAqB;IACrB,UAAU;IACV,aAAa;IACb,uBAAuB;EACzB;AACF",sourcesContent:["@layer component {\n  #nav ul {\n    list-style-type: none;\n    padding: 0;\n    display: flex;\n    justify-content: center;\n  }\n}\n"],sourceRoot:""}]);const c=s},282:(n,e,t)=>{t.d(e,{Z:()=>c});var o=t(537),r=t.n(o),a=t(645),s=t.n(a)()(r());s.push([n.id,"@layer component {\n  .primary-heading {\n    background-color: yellow;\n    width: fit-content;\n    padding: var(--sm-gap) var(--l-gap);\n  }\n}\n","",{version:3,sources:["webpack://./src/css-components/primary-heading.css"],names:[],mappings:"AAAA;EACE;IACE,wBAAwB;IACxB,kBAAkB;IAClB,mCAAmC;EACrC;AACF",sourcesContent:["@layer component {\n  .primary-heading {\n    background-color: yellow;\n    width: fit-content;\n    padding: var(--sm-gap) var(--l-gap);\n  }\n}\n"],sourceRoot:""}]);const c=s},527:(n,e,t)=>{t.d(e,{Z:()=>c});var o=t(537),r=t.n(o),a=t(645),s=t.n(a)()(r());s.push([n.id,"@layer component {\n  .review {\n    position: relative;\n    max-width: 60ch;\n    padding: var(--l-gap);\n  }\n\n  .review img {\n    position: absolute;\n    top: -65px;\n    right: 50%;\n    transform: translateX(50%);\n  }\n}\n","",{version:3,sources:["webpack://./src/css-components/review-article.css"],names:[],mappings:"AAAA;EACE;IACE,kBAAkB;IAClB,eAAe;IACf,qBAAqB;EACvB;;EAEA;IACE,kBAAkB;IAClB,UAAU;IACV,UAAU;IACV,0BAA0B;EAC5B;AACF",sourcesContent:["@layer component {\n  .review {\n    position: relative;\n    max-width: 60ch;\n    padding: var(--l-gap);\n  }\n\n  .review img {\n    position: absolute;\n    top: -65px;\n    right: 50%;\n    transform: translateX(50%);\n  }\n}\n"],sourceRoot:""}]);const c=s},353:(n,e,t)=>{t.d(e,{Z:()=>c});var o=t(537),r=t.n(o),a=t(645),s=t.n(a)()(r());s.push([n.id,"@layer component {\n  .treehouse-img {\n    width: 100px;\n  }\n}\n","",{version:3,sources:["webpack://./src/css-components/treehouse.css"],names:[],mappings:"AAAA;EACE;IACE,YAAY;EACd;AACF",sourcesContent:["@layer component {\n  .treehouse-img {\n    width: 100px;\n  }\n}\n"],sourceRoot:""}]);const c=s},426:(n,e,t)=>{t.d(e,{Z:()=>g});var o=t(537),r=t.n(o),a=t(645),s=t.n(a),c=t(620),i=t(353),p=t(155),l=t(458),d=t(282),A=t(527),u=t(801),m=t(193),f=t(321),h=s()(r());h.i(c.Z),h.i(i.Z),h.i(p.Z),h.i(l.Z),h.i(d.Z),h.i(A.Z),h.i(u.Z),h.i(m.Z),h.i(f.Z),h.push([n.id,"@layer component, page, base;\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA,4BAA4B",sourcesContent:["@layer component, page, base;\n\n@import url(./css-components/base.css);\n@import url(./css-components/treehouse.css);\n@import url(./css-components/nav.css);\n@import url(./css-components/main.css);\n@import url(./css-components/primary-heading.css);\n@import url(./css-components/review-article.css);\n@import url(./css-components/descList.css);\n@import url(./css-components/footer.css);\n@import url(./css-components/address.css);\n"],sourceRoot:""}]);const g=h},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",o=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),o&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),o&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,o,r,a){"string"==typeof n&&(n=[[null,n,void 0]]);var s={};if(o)for(var c=0;c<this.length;c++){var i=this[c][0];null!=i&&(s[i]=!0)}for(var p=0;p<n.length;p++){var l=[].concat(n[p]);o&&s[l[0]]||(void 0!==a&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=a),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),r&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=r):l[4]="".concat(r)),e.push(l))}},e}},667:n=>{n.exports=function(n,e){return e||(e={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),e.hash&&(n+=e.hash),/["'() \t\n]|(%20)/.test(n)||e.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),a="/*# ".concat(r," */");return[e].concat([a]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,o=0;o<e.length;o++)if(e[o].identifier===n){t=o;break}return t}function o(n,o){for(var a={},s=[],c=0;c<n.length;c++){var i=n[c],p=o.base?i[0]+o.base:i[0],l=a[p]||0,d="".concat(p," ").concat(l);a[p]=l+1;var A=t(d),u={css:i[1],media:i[2],sourceMap:i[3],supports:i[4],layer:i[5]};if(-1!==A)e[A].references++,e[A].updater(u);else{var m=r(u,o);o.byIndex=c,e.splice(c,0,{identifier:d,updater:m,references:1})}s.push(d)}return s}function r(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,r){var a=o(n=n||[],r=r||{});return function(n){n=n||[];for(var s=0;s<a.length;s++){var c=t(a[s]);e[c].references--}for(var i=o(n,r),p=0;p<a.length;p++){var l=t(a[p]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}a=i}}},569:n=>{var e={};n.exports=function(n,t){var o=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,r&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(o,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},638:(n,e,t)=>{n.exports=t.p+"d96bb2f98cb3d0d8ee06.ttf"},75:(n,e,t)=>{n.exports=t.p+"613585db06f849ca7717.ttf"}},e={};function t(o){var r=e[o];if(void 0!==r)return r.exports;var a=e[o]={id:o,exports:{}};return n[o](a,a.exports,t),a.exports}t.m=n,t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var o in e)t.o(e,o)&&!t.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:e[o]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var o=e.getElementsByTagName("script");if(o.length)for(var r=o.length-1;r>-1&&!n;)n=o[r--].src}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.b=document.baseURI||self.location.href,t.nc=void 0,(()=>{var n=t(379),e=t.n(n),o=t(795),r=t.n(o),a=t(569),s=t.n(a),c=t(565),i=t.n(c),p=t(216),l=t.n(p),d=t(589),A=t.n(d),u=t(426),m={};m.styleTagTransform=A(),m.setAttributes=i(),m.insert=s().bind(null,"head"),m.domAPI=r(),m.insertStyleElement=l(),e()(u.Z,m),u.Z&&u.Z.locals&&u.Z.locals;const f=t.p+"2837dbb861ebf055c588.png",h=(n="div",e="")=>{const t=document.createElement(n);return e&&t.classList.add(e),t},g=(n,e="p",t="")=>{const o=document.createElement(e);return t&&o.classList.add(t),o.textContent=n,o},C=(n,e="")=>{const t=document.createElement("img");return t.src=n,e&&t.classList.add(e),t},v=(n,e,t)=>{const o=document.createElement("span");o.textContent=`${n}: `;const r=document.createElement("a");return r.textContent=t,"tel"===e?r.href="tel:"+t:"email"===e&&(r.href="mailto:"+t),o.appendChild(r),o},y=n=>n[0].toUpperCase()+n.substring(1).toLowerCase(),b=function(n){const e=h("address");for(const t in n){const o=y(t);switch(t){case"title":const r=g(n[t],"h2");e.appendChild(r);break;case"city":case"state":case"zip":case"role":const a=g(`${o}: ${n[t]}`,"p");e.appendChild(a);break;case"tel":case"email":const s=v(o,t,n[t]);e.appendChild(s)}}return e},E=function(n){const e=g("Andy's Acorntastic Appetizers","h1","primary-heading");n.appendChild(e);const t=function(n,e,t=null){const o=h("article","review");if(null!==t){const n=C(t,"treehouse-img");o.appendChild(n)}const r=g(e);o.appendChild(r);const a=h("footer"),s=g(n,"cite");return a.appendChild(s),o.appendChild(a),o}("Adam","Andy's with their own homebrewed syrup has the best pancakes around! \n  The atmosphere and customer service make you feel like you are sitting\n  in the middle of the woods, gorging on nuts like a squirrel! \n  This is exactly the kind of place that I like to return to again and again.",f);n.appendChild(t);const o=function(n,e){const t=h("div","desc"),o=g(n,"h2"),r=h("dl");for(const n in e){const t=g(y(n),"dt"),o=g(e[n],"dd");r.append(t,o)}return t.append(o,r),t}("Opening Hours",{monday:"8am - 8pm",tuesday:"6am - 6pm",wednesday:"6am - 6pm",thursday:"6am - 10pm",friday:"9am - 11pm",saturday:"10am - 11pm",sunday:"10am - 11pm"});n.appendChild(o);const r=h("footer","footer"),a=b({title:"Location",city:"Anytown",state:"Toronto",zip:12345,tel:98765432,email:"john.doe@example.com"});r.appendChild(a),n.appendChild(r)},B=function(n){const e=g("Menu","h1","primary-heading");n.appendChild(e),function(n){const e=[];for(const t in n){const o=h("section",t),r=g(y(t),"h2");o.appendChild(r),n[t].forEach((n=>{const e=h("article"),t=g(n.title,"h3"),r=g(n.desc),a=g(n.price);e.append(t,r,a),o.appendChild(e)})),e.push(o)}return e}({beverages:[{title:"HoneyAcorn Tea",desc:"A cozy and sweet tea crafted with premium syrup, honey, and a hint of lemon to kickstart your day on a delightful note!",price:"$1.25"},{title:"Berry Tea",desc:"A soothing tea, rich and satisfying, infused with a blend of various berry flavors. Ideal when served chilled, though a warm serving is available upon request.",price:"$2"}],sides:[{title:"Jam & Toast",desc:"A slice of toast with your preferred choice of bread, accompanied by our homemade blackberry or raspberry jam.",price:"$1"},{title:"Fresh Fruit",desc:"A small bowl of fresh fruit, whatever we find at the market for the day.",price:"$3"}],mains:[{title:"Acorn Squash Stuffed with Wild Rice and Nuts",desc:"Roasted acorn squash halves filled with a savory mixture of wild rice, chopped nuts, dried fruits, and herbs.",price:"$5"},{title:"Acorn-Crusted Chicken Tenders",desc:"Chicken tenders coated in a batter made from acorn flour, seasoned with herbs, and baked or fried until crispy.",price:"$10"},{title:"Hazelnut-Crusted Trout",desc:"Trout fillets coated in crushed hazelnuts and herbs, pan-seared to perfection, and served with an acorn-based sauce.",price:"$20"},{title:"Acorn Gnocchi with Brown Butter Sage Sauce",desc:"Homemade acorn flour gnocchi served in a nutty brown butter and sage sauce, sprinkled with grated Parmesan cheese.",price:"$15"},{title:"Walnut-Crusted Salmon",desc:"Combines the richness of salmon with the nutty crunch of walnuts and the tangy-sweet flavors of mustard and honey.",price:"$50"}]}).forEach((e=>{n.appendChild(e)}))},w=document.querySelector("#content"),I=document.querySelector("#nav"),x=document.querySelectorAll("#nav button");I.addEventListener("click",(n=>{if("BUTTON"===n.target.tagName){const e=n.target,t=e.id;x.forEach((n=>{n.classList.remove("active")})),e.classList.add("active"),w.innerHTML="","home"===t&&E(w),"menu"===t&&B(w),"contact"===t&&function(n){const e=g("Contact","h1","primary-heading");n.appendChild(e);const t=h("section");[{title:"Mama Squirrel",role:"Manager",tel:5555555554,email:"totallyRealEmail@notFake.com"},{title:"Papa Squirrel",role:"Chef",tel:5555555555,email:"perfectlyRealEmail@notFake.com"}].forEach((n=>{const e=b(n);t.appendChild(e)})),n.appendChild(t)}(w)}})),E(w)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,