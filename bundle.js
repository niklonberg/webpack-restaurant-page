(()=>{"use strict";var n={321:(n,e,t)=>{t.d(e,{Z:()=>c});var o=t(537),a=t.n(o),r=t(645),s=t.n(r)()(a());s.push([n.id,"@layer component {\n  address {\n    margin-bottom: var(--l-gap);\n  }\n\n  address h2 {\n    margin: 0;\n    padding-left: var(--m-gap);\n  }\n\n  address span {\n    display: block;\n    margin-block: 16px;\n  }\n}\n","",{version:3,sources:["webpack://./src/css-components/address.css"],names:[],mappings:"AAAA;EACE;IACE,2BAA2B;EAC7B;;EAEA;IACE,SAAS;IACT,0BAA0B;EAC5B;;EAEA;IACE,cAAc;IACd,kBAAkB;EACpB;AACF",sourcesContent:["@layer component {\n  address {\n    margin-bottom: var(--l-gap);\n  }\n\n  address h2 {\n    margin: 0;\n    padding-left: var(--m-gap);\n  }\n\n  address span {\n    display: block;\n    margin-block: 16px;\n  }\n}\n"],sourceRoot:""}]);const c=s},814:(n,e,t)=>{t.d(e,{Z:()=>c});var o=t(537),a=t.n(o),r=t(645),s=t.n(r)()(a());s.push([n.id,"@layer component {\n  a {\n    color: var(--primary); /* Use primary color for text */\n    padding: calc(0.5 * var(--sm-gap)) calc(0.5 * var(--m-gap));\n    border-radius: var(--sm-br);\n  }\n\n  a:hover {\n    opacity: 0.7;\n  }\n}\n","",{version:3,sources:["webpack://./src/css-components/anchor.css"],names:[],mappings:"AAAA;EACE;IACE,qBAAqB,EAAE,+BAA+B;IACtD,2DAA2D;IAC3D,2BAA2B;EAC7B;;EAEA;IACE,YAAY;EACd;AACF",sourcesContent:["@layer component {\n  a {\n    color: var(--primary); /* Use primary color for text */\n    padding: calc(0.5 * var(--sm-gap)) calc(0.5 * var(--m-gap));\n    border-radius: var(--sm-br);\n  }\n\n  a:hover {\n    opacity: 0.7;\n  }\n}\n"],sourceRoot:""}]);const c=s},620:(n,e,t)=>{t.d(e,{Z:()=>u});var o=t(537),a=t.n(o),r=t(645),s=t.n(r),c=t(667),i=t.n(c),p=new URL(t(75),t.b),A=new URL(t(638),t.b),l=s()(a()),d=i()(p),m=i()(A);l.push([n.id,`@layer base {\n  @font-face {\n    font-family: "Josefin Sans";\n    src: url(${d}) format("ttf"),\n      url(${m}) format("ttf");\n    font-weight: 600;\n    font-style: normal;\n  }\n\n  :root {\n    --primary: #4e3d28;\n    --secondary: #9baf7c;\n    --tertiary: #fcbd5f;\n\n    --sm-gap: 10px;\n    --m-gap: 20px;\n    --l-gap: 30px;\n\n    --sm-br: 5px;\n    --m-br: 10px;\n\n    --clip: polygon(\n      10% 0,\n      90% 0,\n      100% 20%,\n      100% 80%,\n      90% 100%,\n      10% 100%,\n      0 80%,\n      0 20%\n    );\n  }\n\n  *,\n  *::before,\n  *::after {\n    box-sizing: border-box;\n  }\n\n  body {\n    font-family: "Josefin Sans", system-ui, sans-serif;\n    background-color: var(--primary);\n    color: var(--primary-contrast);\n    margin: 0;\n  }\n\n  input,\n  textarea,\n  button,\n  select {\n    font: inherit;\n    font-size: 100%;\n  }\n}\n`,"",{version:3,sources:["webpack://./src/css-components/base.css"],names:[],mappings:"AAAA;EACE;IACE,2BAA2B;IAC3B;2DACsE;IACtE,gBAAgB;IAChB,kBAAkB;EACpB;;EAEA;IACE,kBAAkB;IAClB,oBAAoB;IACpB,mBAAmB;;IAEnB,cAAc;IACd,aAAa;IACb,aAAa;;IAEb,YAAY;IACZ,YAAY;;IAEZ;;;;;;;;;KASC;EACH;;EAEA;;;IAGE,sBAAsB;EACxB;;EAEA;IACE,kDAAkD;IAClD,gCAAgC;IAChC,8BAA8B;IAC9B,SAAS;EACX;;EAEA;;;;IAIE,aAAa;IACb,eAAe;EACjB;AACF",sourcesContent:['@layer base {\n  @font-face {\n    font-family: "Josefin Sans";\n    src: url(../fonts/JosefinSans-VariableFont_wght.ttf) format("ttf"),\n      url(../fonts/JosefinSans-Italic-VariableFont_wght.ttf) format("ttf");\n    font-weight: 600;\n    font-style: normal;\n  }\n\n  :root {\n    --primary: #4e3d28;\n    --secondary: #9baf7c;\n    --tertiary: #fcbd5f;\n\n    --sm-gap: 10px;\n    --m-gap: 20px;\n    --l-gap: 30px;\n\n    --sm-br: 5px;\n    --m-br: 10px;\n\n    --clip: polygon(\n      10% 0,\n      90% 0,\n      100% 20%,\n      100% 80%,\n      90% 100%,\n      10% 100%,\n      0 80%,\n      0 20%\n    );\n  }\n\n  *,\n  *::before,\n  *::after {\n    box-sizing: border-box;\n  }\n\n  body {\n    font-family: "Josefin Sans", system-ui, sans-serif;\n    background-color: var(--primary);\n    color: var(--primary-contrast);\n    margin: 0;\n  }\n\n  input,\n  textarea,\n  button,\n  select {\n    font: inherit;\n    font-size: 100%;\n  }\n}\n'],sourceRoot:""}]);const u=l},594:(n,e,t)=>{t.d(e,{Z:()=>c});var o=t(537),a=t.n(o),r=t(645),s=t.n(r)()(a());s.push([n.id,"@layer component {\n  .contact {\n    padding: var(--l-gap) calc(2 * var(--l-gap));\n  }\n}\n","",{version:3,sources:["webpack://./src/css-components/contacts.css"],names:[],mappings:"AAAA;EACE;IACE,4CAA4C;EAC9C;AACF",sourcesContent:["@layer component {\n  .contact {\n    padding: var(--l-gap) calc(2 * var(--l-gap));\n  }\n}\n"],sourceRoot:""}]);const c=s},801:(n,e,t)=>{t.d(e,{Z:()=>c});var o=t(537),a=t.n(o),r=t(645),s=t.n(r)()(a());s.push([n.id,"@layer component {\n  .desc {\n    padding: var(--sm-gap) calc(2 * var(--l-gap));\n  }\n\n  .desc dd {\n    margin-bottom: var(--sm-gap);\n    font-weight: bold;\n    letter-spacing: 1.2px;\n  }\n}\n","",{version:3,sources:["webpack://./src/css-components/descList.css"],names:[],mappings:"AAAA;EACE;IACE,6CAA6C;EAC/C;;EAEA;IACE,4BAA4B;IAC5B,iBAAiB;IACjB,qBAAqB;EACvB;AACF",sourcesContent:["@layer component {\n  .desc {\n    padding: var(--sm-gap) calc(2 * var(--l-gap));\n  }\n\n  .desc dd {\n    margin-bottom: var(--sm-gap);\n    font-weight: bold;\n    letter-spacing: 1.2px;\n  }\n}\n"],sourceRoot:""}]);const c=s},193:(n,e,t)=>{t.d(e,{Z:()=>c});var o=t(537),a=t.n(o),r=t(645),s=t.n(r)()(a());s.push([n.id,"@layer component {\n  .footer {\n    padding: var(--l-gap);\n  }\n}\n","",{version:3,sources:["webpack://./src/css-components/footer.css"],names:[],mappings:"AAAA;EACE;IACE,qBAAqB;EACvB;AACF",sourcesContent:["@layer component {\n  .footer {\n    padding: var(--l-gap);\n  }\n}\n"],sourceRoot:""}]);const c=s},328:(n,e,t)=>{t.d(e,{Z:()=>c});var o=t(537),a=t.n(o),r=t(645),s=t.n(r)()(a());s.push([n.id,"@layer component {\n  header {\n    background-color: var(--tertiary);\n    padding-top: var(--sm-gap);\n    margin-bottom: calc(2 * var(--l-gap));\n    box-shadow: 0px 10px 5px rgba(0 0 0 / 0.3);\n  }\n}\n","",{version:3,sources:["webpack://./src/css-components/header.css"],names:[],mappings:"AAAA;EACE;IACE,iCAAiC;IACjC,0BAA0B;IAC1B,qCAAqC;IACrC,0CAA0C;EAC5C;AACF",sourcesContent:["@layer component {\n  header {\n    background-color: var(--tertiary);\n    padding-top: var(--sm-gap);\n    margin-bottom: calc(2 * var(--l-gap));\n    box-shadow: 0px 10px 5px rgba(0 0 0 / 0.3);\n  }\n}\n"],sourceRoot:""}]);const c=s},458:(n,e,t)=>{t.d(e,{Z:()=>c});var o=t(537),a=t.n(o),r=t(645),s=t.n(r)()(a());s.push([n.id,'@layer component {\n  #content {\n    padding-inline: calc(2 * var(--l-gap));\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: calc(3 * var(--l-gap));\n  }\n\n  #content > * {\n    position: relative;\n  }\n\n  #content > *::before {\n    content: "";\n    background-color: var(--tertiary);\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    clip-path: var(--clip);\n    z-index: -1;\n  }\n\n  #content > *::after {\n    content: "";\n    background-color: var(--secondary);\n    position: absolute;\n    top: -20px;\n    right: -20px;\n    bottom: -20px;\n    left: -20px;\n    clip-path: var(--clip);\n    z-index: -2;\n  }\n\n  #content > *:last-child {\n    margin-bottom: calc(2 * var(--l-gap));\n  }\n}\n',"",{version:3,sources:["webpack://./src/css-components/main.css"],names:[],mappings:"AAAA;EACE;IACE,sCAAsC;IACtC,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,2BAA2B;EAC7B;;EAEA;IACE,kBAAkB;EACpB;;EAEA;IACE,WAAW;IACX,iCAAiC;IACjC,kBAAkB;IAClB,MAAM;IACN,QAAQ;IACR,SAAS;IACT,OAAO;IACP,sBAAsB;IACtB,WAAW;EACb;;EAEA;IACE,WAAW;IACX,kCAAkC;IAClC,kBAAkB;IAClB,UAAU;IACV,YAAY;IACZ,aAAa;IACb,WAAW;IACX,sBAAsB;IACtB,WAAW;EACb;;EAEA;IACE,qCAAqC;EACvC;AACF",sourcesContent:['@layer component {\n  #content {\n    padding-inline: calc(2 * var(--l-gap));\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: calc(3 * var(--l-gap));\n  }\n\n  #content > * {\n    position: relative;\n  }\n\n  #content > *::before {\n    content: "";\n    background-color: var(--tertiary);\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    clip-path: var(--clip);\n    z-index: -1;\n  }\n\n  #content > *::after {\n    content: "";\n    background-color: var(--secondary);\n    position: absolute;\n    top: -20px;\n    right: -20px;\n    bottom: -20px;\n    left: -20px;\n    clip-path: var(--clip);\n    z-index: -2;\n  }\n\n  #content > *:last-child {\n    margin-bottom: calc(2 * var(--l-gap));\n  }\n}\n'],sourceRoot:""}]);const c=s},112:(n,e,t)=>{t.d(e,{Z:()=>c});var o=t(537),a=t.n(o),r=t(645),s=t.n(r)()(a());s.push([n.id,'@layer component {\n  .menu-category {\n    padding: var(--l-gap) calc(2 * var(--l-gap));\n  }\n\n  .menu-category p {\n    max-width: 45ch;\n  }\n\n  .price {\n    position: relative;\n    margin-left: var(--m-gap);\n    margin-top: 0;\n    font-weight: bold;\n    display: inline-block;\n  }\n\n  .price::after {\n    content: "";\n    background-color: black;\n    position: absolute;\n    bottom: -4px;\n    left: -5px;\n    width: calc(100% + 10px);\n    height: 3px;\n  }\n}\n',"",{version:3,sources:["webpack://./src/css-components/menu-category.css"],names:[],mappings:"AAAA;EACE;IACE,4CAA4C;EAC9C;;EAEA;IACE,eAAe;EACjB;;EAEA;IACE,kBAAkB;IAClB,yBAAyB;IACzB,aAAa;IACb,iBAAiB;IACjB,qBAAqB;EACvB;;EAEA;IACE,WAAW;IACX,uBAAuB;IACvB,kBAAkB;IAClB,YAAY;IACZ,UAAU;IACV,wBAAwB;IACxB,WAAW;EACb;AACF",sourcesContent:['@layer component {\n  .menu-category {\n    padding: var(--l-gap) calc(2 * var(--l-gap));\n  }\n\n  .menu-category p {\n    max-width: 45ch;\n  }\n\n  .price {\n    position: relative;\n    margin-left: var(--m-gap);\n    margin-top: 0;\n    font-weight: bold;\n    display: inline-block;\n  }\n\n  .price::after {\n    content: "";\n    background-color: black;\n    position: absolute;\n    bottom: -4px;\n    left: -5px;\n    width: calc(100% + 10px);\n    height: 3px;\n  }\n}\n'],sourceRoot:""}]);const c=s},155:(n,e,t)=>{t.d(e,{Z:()=>d});var o=t(537),a=t.n(o),r=t(645),s=t.n(r),c=t(667),i=t.n(c),p=new URL(t(545),t.b),A=s()(a()),l=i()(p);A.push([n.id,`@layer component {\n  #nav ul {\n    list-style-type: none;\n    padding: 0;\n    margin: 0;\n    display: flex;\n    justify-content: center;\n    gap: var(--l-gap);\n  }\n\n  #nav button {\n    position: relative;\n    padding: var(--sm-gap) var(--m-gap);\n    background-color: rgba(0 0 0 / 0);\n    border-radius: 10px 10px 0 0;\n    border-bottom: 0;\n    border-color: black;\n    border-width: 2px;\n    cursor: pointer;\n  }\n\n  #nav button.active {\n    color: white;\n    background-color: rgba(0 0 0 / 0.25);\n  }\n\n  #nav button::after {\n    display: none;\n    position: absolute;\n    content: "";\n    width: 100%;\n    height: 100%;\n    bottom: 0;\n    left: 50%;\n    transform: translate(-50%, 100%);\n    background-image: url(${l});\n  }\n\n  #nav button.active::after {\n    display: block;\n  }\n}\n`,"",{version:3,sources:["webpack://./src/css-components/nav.css"],names:[],mappings:"AAAA;EACE;IACE,qBAAqB;IACrB,UAAU;IACV,SAAS;IACT,aAAa;IACb,uBAAuB;IACvB,iBAAiB;EACnB;;EAEA;IACE,kBAAkB;IAClB,mCAAmC;IACnC,iCAAiC;IACjC,4BAA4B;IAC5B,gBAAgB;IAChB,mBAAmB;IACnB,iBAAiB;IACjB,eAAe;EACjB;;EAEA;IACE,YAAY;IACZ,oCAAoC;EACtC;;EAEA;IACE,aAAa;IACb,kBAAkB;IAClB,WAAW;IACX,WAAW;IACX,YAAY;IACZ,SAAS;IACT,SAAS;IACT,gCAAgC;IAChC,yDAA6C;EAC/C;;EAEA;IACE,cAAc;EAChB;AACF",sourcesContent:['@layer component {\n  #nav ul {\n    list-style-type: none;\n    padding: 0;\n    margin: 0;\n    display: flex;\n    justify-content: center;\n    gap: var(--l-gap);\n  }\n\n  #nav button {\n    position: relative;\n    padding: var(--sm-gap) var(--m-gap);\n    background-color: rgba(0 0 0 / 0);\n    border-radius: 10px 10px 0 0;\n    border-bottom: 0;\n    border-color: black;\n    border-width: 2px;\n    cursor: pointer;\n  }\n\n  #nav button.active {\n    color: white;\n    background-color: rgba(0 0 0 / 0.25);\n  }\n\n  #nav button::after {\n    display: none;\n    position: absolute;\n    content: "";\n    width: 100%;\n    height: 100%;\n    bottom: 0;\n    left: 50%;\n    transform: translate(-50%, 100%);\n    background-image: url(../images/dripping.png);\n  }\n\n  #nav button.active::after {\n    display: block;\n  }\n}\n'],sourceRoot:""}]);const d=A},282:(n,e,t)=>{t.d(e,{Z:()=>c});var o=t(537),a=t.n(o),r=t(645),s=t.n(r)()(a());s.push([n.id,"@layer component {\n  .primary-heading {\n    background-color: var(--tertiary);\n    text-align: center;\n    width: fit-content;\n    padding: var(--sm-gap) var(--l-gap);\n  }\n}\n","",{version:3,sources:["webpack://./src/css-components/primary-heading.css"],names:[],mappings:"AAAA;EACE;IACE,iCAAiC;IACjC,kBAAkB;IAClB,kBAAkB;IAClB,mCAAmC;EACrC;AACF",sourcesContent:["@layer component {\n  .primary-heading {\n    background-color: var(--tertiary);\n    text-align: center;\n    width: fit-content;\n    padding: var(--sm-gap) var(--l-gap);\n  }\n}\n"],sourceRoot:""}]);const c=s},527:(n,e,t)=>{t.d(e,{Z:()=>c});var o=t(537),a=t.n(o),r=t(645),s=t.n(r)()(a());s.push([n.id,"@layer component {\n  .review {\n    position: relative;\n    max-width: 60ch;\n    padding: var(--l-gap);\n  }\n\n  .review img {\n    position: absolute;\n    top: -65px;\n    right: 50%;\n    transform: translateX(50%);\n  }\n\n  .review cite {\n    padding: var(--l-gap);\n  }\n}\n","",{version:3,sources:["webpack://./src/css-components/review-article.css"],names:[],mappings:"AAAA;EACE;IACE,kBAAkB;IAClB,eAAe;IACf,qBAAqB;EACvB;;EAEA;IACE,kBAAkB;IAClB,UAAU;IACV,UAAU;IACV,0BAA0B;EAC5B;;EAEA;IACE,qBAAqB;EACvB;AACF",sourcesContent:["@layer component {\n  .review {\n    position: relative;\n    max-width: 60ch;\n    padding: var(--l-gap);\n  }\n\n  .review img {\n    position: absolute;\n    top: -65px;\n    right: 50%;\n    transform: translateX(50%);\n  }\n\n  .review cite {\n    padding: var(--l-gap);\n  }\n}\n"],sourceRoot:""}]);const c=s},353:(n,e,t)=>{t.d(e,{Z:()=>c});var o=t(537),a=t.n(o),r=t(645),s=t.n(r)()(a());s.push([n.id,"@layer component {\n  .treehouse-img {\n    width: 100px;\n  }\n}\n","",{version:3,sources:["webpack://./src/css-components/treehouse.css"],names:[],mappings:"AAAA;EACE;IACE,YAAY;EACd;AACF",sourcesContent:["@layer component {\n  .treehouse-img {\n    width: 100px;\n  }\n}\n"],sourceRoot:""}]);const c=s},426:(n,e,t)=>{t.d(e,{Z:()=>y});var o=t(537),a=t.n(o),r=t(645),s=t.n(r),c=t(620),i=t(353),p=t(155),A=t(458),l=t(282),d=t(527),m=t(801),u=t(193),C=t(321),g=t(594),f=t(112),h=t(328),v=t(814),b=s()(a());b.i(c.Z),b.i(i.Z),b.i(p.Z),b.i(A.Z),b.i(l.Z),b.i(d.Z),b.i(m.Z),b.i(u.Z),b.i(C.Z),b.i(g.Z),b.i(f.Z),b.i(h.Z),b.i(v.Z),b.push([n.id,"@layer component, page, base;\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA,4BAA4B",sourcesContent:["@layer component, page, base;\n\n@import url(./css-components/base.css);\n@import url(./css-components/treehouse.css);\n@import url(./css-components/nav.css);\n@import url(./css-components/main.css);\n@import url(./css-components/primary-heading.css);\n@import url(./css-components/review-article.css);\n@import url(./css-components/descList.css);\n@import url(./css-components/footer.css);\n@import url(./css-components/address.css);\n@import url(./css-components/contacts.css);\n@import url(./css-components/menu-category.css);\n@import url(./css-components/header.css);\n@import url(./css-components/anchor.css);\n"],sourceRoot:""}]);const y=b},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",o=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),o&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),o&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,o,a,r){"string"==typeof n&&(n=[[null,n,void 0]]);var s={};if(o)for(var c=0;c<this.length;c++){var i=this[c][0];null!=i&&(s[i]=!0)}for(var p=0;p<n.length;p++){var A=[].concat(n[p]);o&&s[A[0]]||(void 0!==r&&(void 0===A[5]||(A[1]="@layer".concat(A[5].length>0?" ".concat(A[5]):""," {").concat(A[1],"}")),A[5]=r),t&&(A[2]?(A[1]="@media ".concat(A[2]," {").concat(A[1],"}"),A[2]=t):A[2]=t),a&&(A[4]?(A[1]="@supports (".concat(A[4],") {").concat(A[1],"}"),A[4]=a):A[4]="".concat(a)),e.push(A))}},e}},667:n=>{n.exports=function(n,e){return e||(e={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),e.hash&&(n+=e.hash),/["'() \t\n]|(%20)/.test(n)||e.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),r="/*# ".concat(a," */");return[e].concat([r]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,o=0;o<e.length;o++)if(e[o].identifier===n){t=o;break}return t}function o(n,o){for(var r={},s=[],c=0;c<n.length;c++){var i=n[c],p=o.base?i[0]+o.base:i[0],A=r[p]||0,l="".concat(p," ").concat(A);r[p]=A+1;var d=t(l),m={css:i[1],media:i[2],sourceMap:i[3],supports:i[4],layer:i[5]};if(-1!==d)e[d].references++,e[d].updater(m);else{var u=a(m,o);o.byIndex=c,e.splice(c,0,{identifier:l,updater:u,references:1})}s.push(l)}return s}function a(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,a){var r=o(n=n||[],a=a||{});return function(n){n=n||[];for(var s=0;s<r.length;s++){var c=t(r[s]);e[c].references--}for(var i=o(n,a),p=0;p<r.length;p++){var A=t(r[p]);0===e[A].references&&(e[A].updater(),e.splice(A,1))}r=i}}},569:n=>{var e={};n.exports=function(n,t){var o=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var a=void 0!==t.layer;a&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,a&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var r=t.sourceMap;r&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(r))))," */")),e.styleTagTransform(o,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},638:(n,e,t)=>{n.exports=t.p+"d96bb2f98cb3d0d8ee06.ttf"},75:(n,e,t)=>{n.exports=t.p+"613585db06f849ca7717.ttf"},545:(n,e,t)=>{n.exports=t.p+"b8ff550e9e7c6e821764.png"}},e={};function t(o){var a=e[o];if(void 0!==a)return a.exports;var r=e[o]={id:o,exports:{}};return n[o](r,r.exports,t),r.exports}t.m=n,t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var o in e)t.o(e,o)&&!t.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:e[o]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var o=e.getElementsByTagName("script");if(o.length)for(var a=o.length-1;a>-1&&!n;)n=o[a--].src}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.b=document.baseURI||self.location.href,t.nc=void 0,(()=>{var n=t(379),e=t.n(n),o=t(795),a=t.n(o),r=t(569),s=t.n(r),c=t(565),i=t.n(c),p=t(216),A=t.n(p),l=t(589),d=t.n(l),m=t(426),u={};u.styleTagTransform=d(),u.setAttributes=i(),u.insert=s().bind(null,"head"),u.domAPI=a(),u.insertStyleElement=A(),e()(m.Z,u),m.Z&&m.Z.locals&&m.Z.locals;const C=t.p+"2837dbb861ebf055c588.png",g=(n="div",e="")=>{const t=document.createElement(n);return e&&t.classList.add(e),t},f=(n,e="p",t="")=>{const o=document.createElement(e);return t&&o.classList.add(t),o.textContent=n,o},h=(n,e="")=>{const t=document.createElement("img");return t.src=n,e&&t.classList.add(e),t},v=(n,e,t)=>{const o=document.createElement("span");o.textContent=`${n}: `;const a=document.createElement("a");return a.textContent=t,"tel"===e?a.href="tel:"+t:"email"===e&&(a.href="mailto:"+t),o.appendChild(a),o},b=n=>n[0].toUpperCase()+n.substring(1).toLowerCase(),y=function(n,e){const t=g("address",e);for(const e in n){const o=b(e);switch(e){case"title":const a=f(n[e],"h2");t.appendChild(a);break;case"city":case"state":case"zip":case"role":const r=f(`${o}: ${n[e]}`,"p");t.appendChild(r);break;case"tel":case"email":const s=v(o,e,n[e]);t.appendChild(s)}}return t},E=function(n){const e=f("Andy's Acorntastic Appetizers","h1","primary-heading");n.appendChild(e);const t=function(n,e,t=null){const o=g("article","review");if(null!==t){const n=h(t,"treehouse-img");o.appendChild(n)}const a=f(e);o.appendChild(a);const r=g("footer"),s=f(n,"cite");return r.appendChild(s),o.appendChild(r),o}("Adam","Andy's with their own homebrewed syrup has the best pancakes around! \n  The atmosphere and customer service make you feel like you are sitting\n  in the middle of the woods, gorging on nuts like a squirrel! \n  This is exactly the kind of place that I like to return to again and again.",C);n.appendChild(t);const o=function(n,e){const t=g("div","desc"),o=f(n,"h2"),a=g("dl");for(const n in e){const t=f(b(n),"dt"),o=f(e[n],"dd");a.append(t,o)}return t.append(o,a),t}("Opening Hours",{monday:"8am - 8pm",tuesday:"6am - 6pm",wednesday:"6am - 6pm",thursday:"6am - 10pm",friday:"9am - 11pm",saturday:"10am - 11pm",sunday:"10am - 11pm"});n.appendChild(o);const a=g("footer","footer"),r=y({title:"Location",city:"Anytown",state:"Toronto",zip:12345,tel:98765432,email:"john.doe@example.com"});a.appendChild(r),n.appendChild(a)},B=function(n){const e=f("Menu","h1","primary-heading");n.appendChild(e),function(n){const e=[];for(const t in n){const o=g("section","menu-category"),a=f(b(t),"h2");o.appendChild(a),n[t].forEach((n=>{const e=g("article"),t=f(n.title,"h3"),a=f(n.desc),r=f(n.price,"p","price");e.append(t,a,r),o.appendChild(e)})),e.push(o)}return e}({beverages:[{title:"HoneyAcorn Tea",desc:"A cozy and sweet tea crafted with premium syrup, honey, and a hint of lemon to kickstart your day on a delightful note!",price:"$1.25"},{title:"Berry Tea",desc:"A soothing tea, rich and satisfying, infused with a blend of various berry flavors. Ideal when served chilled, though a warm serving is available upon request.",price:"$2"}],sides:[{title:"Jam & Toast",desc:"A slice of toast with your preferred choice of bread, accompanied by our homemade blackberry or raspberry jam.",price:"$1"},{title:"Fresh Fruit",desc:"A small bowl of fresh fruit, whatever we find at the market for the day.",price:"$3"}],mains:[{title:"Acorn Squash Stuffed with Wild Rice and Nuts",desc:"Roasted acorn squash halves filled with a savory mixture of wild rice, chopped nuts, dried fruits, and herbs.",price:"$5"},{title:"Acorn-Crusted Chicken Tenders",desc:"Chicken tenders coated in a batter made from acorn flour, seasoned with herbs, and baked or fried until crispy.",price:"$10"},{title:"Hazelnut-Crusted Trout",desc:"Trout fillets coated in crushed hazelnuts and herbs, pan-seared to perfection, and served with an acorn-based sauce.",price:"$20"},{title:"Acorn Gnocchi with Brown Butter Sage Sauce",desc:"Homemade acorn flour gnocchi served in a nutty brown butter and sage sauce, sprinkled with grated Parmesan cheese.",price:"$15"},{title:"Walnut-Crusted Salmon",desc:"Combines the richness of salmon with the nutty crunch of walnuts and the tangy-sweet flavors of mustard and honey.",price:"$50"}]}).forEach((e=>{n.appendChild(e)}))},I=function(n){const e=f("Contact","h1","primary-heading");n.appendChild(e),[{title:"Mama Squirrel",role:"Manager",tel:5555555554,email:"totallyRealEmail@notFake.com"},{title:"Papa Squirrel",role:"Chef",tel:5555555555,email:"perfectlyRealEmail@notFake.com"},{title:"Baby Squirrel",role:"Waiter",tel:4444444444,email:"maybeRealEmail@notFake.com"},{title:"Distant Cousin Squirrel",role:"Washer",tel:4444444443,email:"maybeNotRealEmail@notFake.com"}].forEach((e=>{const t=y(e,"contact");n.appendChild(t)}))},x=document.querySelector("#content"),k=document.querySelector("#nav"),w=document.querySelectorAll("#nav button");k.addEventListener("click",(n=>{if("BUTTON"===n.target.tagName){const e=n.target,t=e.id;w.forEach((n=>{n.classList.remove("active")})),e.classList.add("active"),x.innerHTML="","home"===t&&E(x),"menu"===t&&B(x),"contact"===t&&I(x)}})),I(x)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,